const apiEnd = `//${process.env.REACT_APP_API_ENDPOINT}/api/`;
const redirecturl = `${process.env.REACT_APP_AD_REDIRECT_API_ENDPOINT}/auth/`;
const adLogin = `${process.env.REACT_APP_AD_API_ENDPOINT}/`;

export default {
  redirecturl,
  adLogin: `${adLogin}?redirecturl=${redirecturl}&errorurl=${redirecturl}`,
  login: `${apiEnd}login`,
  loginAd: `${apiEnd}active-directory-login`,
  logout: `${apiEnd}user/logout`,
  getRole: `${apiEnd}aclpermission/permission/all-permissions-by-role-id`,
  getRoleByUserId: `${apiEnd}aclpermission/permission/all-permissions-by-user-id`,
  userDetail: `${apiEnd}User/details`,
  changePassword: `${apiEnd}User/change-password`,
  getSessions: `${apiEnd}sessiontype/get-all-sessiontypes`,
  getManagers: `${apiEnd}user/get-all-managers-by-userid`,

  manageEmp: {
    getdivisionsbyorganisationid: `${apiEnd}Organisation/get-divisions-by-organisationid`,
    searchuser: `${apiEnd}User/search`,
    getbusinessunitbydivisionid: `${apiEnd}Organisation/get-business-units-by-divisionid`,
    getdepartmentbybusinessunitid: `${apiEnd}Organisation/get-departments-by-business-unitid`,
    getteamsbydepartmentid: `${apiEnd}Organisation/get-teams-by-departmentid`,
    getmanagersbyteamid: `${apiEnd}Organisation/get-managers-by-teamid`,
    getemployeebymanagerid: `${apiEnd}User/get-by-managerid`,
    getallcountries: `${apiEnd}Location/get-all-countries`,
    getstatesbycountryid: `${apiEnd}Location/get-states-by-countryid`,
    getcitiesbystatesid: `${apiEnd}Location/get-cities-by-statesid`,
    searchworklocation: `${apiEnd}Location/search-worklocation`,
    employeeName: `${apiEnd}User/get-by-managerid`,
    employeeType: `${apiEnd}User/get-all-contracttype`,
    getAllUserRole: `${apiEnd}User/get-all-userroles-by-userid`,
    getmanagersbyuserid: `${apiEnd}User/get-all-same-department-managers-by-managerid`,
    updateSecondaryManagers: `${apiEnd}User/insert-user-manager-mapping`,
    getEmployeeByShiftManagerId: `${apiEnd}User/get-by-shift-managerid`,
    updateUserStatus: `${apiEnd}User/update-status`,
  },
  schedule: {
    scheduleList: `${apiEnd}Schedule/get-all-by-userrole`,
    searchSchedule: `${apiEnd}Schedule/search`,
    scheduleInsert: `${apiEnd}schedule/insert`,
    getScheduleByID: `${apiEnd}Schedule/get-by-id`,
    scheduleUpdate: `${apiEnd}Schedule/update`,
    shareWithTeam: `${apiEnd}Schedule/share-schedule-with-team`,
    copySchedule: `${apiEnd}Schedule/copy`,
    insertUpdateNotes: `${apiEnd}Schedule/insert-update-schedule-date-notes`,
    exportScheduleExcel: `${apiEnd}Schedule/export-schedule-excel-format`,
    getUsersByScheduleId: `${apiEnd}Schedule/get-users-by-schedule-id`,
    getAllByUserId: `${apiEnd}Schedule/get-all-by-userid`,
    deleteSchedule: `${apiEnd}Schedule/delete`,
  },
  shift: {
    getShiftType: `${apiEnd}Shift/get-shift-type`,
    getAllShiftType: `${apiEnd}Shift/get-all-shift-types`,
    shiftInsert: `${apiEnd}Shift/insert`,
    shiftDelete: `${apiEnd}Shift/delete`,
    shiftUpdate: `${apiEnd}Shift/update`,
    getShiftByID: `${apiEnd}Shift/get-shift-detail-by-id`,
    shiftSearch: `${apiEnd}Shift/search`,
    usersByDate: `${apiEnd}Shift/search-user-shifts-by-date`,
    getTeammates: `${apiEnd}Shift/get-teammates`,
    insertShiftSwap: `${apiEnd}Shift/insert-shift-swap`,
    openShiftSearch: `${apiEnd}Shift/search-open-shift`,
    reporthours: `${apiEnd}Shift/hours-worked-report`,
    getDownloadReportHours: `${apiEnd}Shift/download-shift-hours-worked-excel`,
    getMngShifApprovalListing: `${apiEnd}Shift/shift-approval-list`,
    getAcceptRejectShiftApproval: `${apiEnd}Shift/accept-reject-shift-approval`,
    searchShiftTemplate: `${apiEnd}Shift/search-shift-template`,
    getShiftTemplateById: `${apiEnd}Shift/get-shift-template-by-id`,
    updateShiftTemplate: `${apiEnd}Shift/insert-update-shift-template`,
    deleteShiftTempById: `${apiEnd}Shift/delete-shift-template`,
    applyOpenShift: `${apiEnd}Shift/apply-for-open-shift`,
    startEndShift: `${apiEnd}Shift/insert-shift-start-end`,
    openRequestShift: `${apiEnd}Shift/apply-for-open-shift`,
    downloadShiftHoursWorkedExcel: `${apiEnd}Shift/download-shift-hours-worked-excel`,
    downloadShiftHoursWorkedPdf: `${apiEnd}Shift/download-shift-hours-worked-pdf`,
    exportShiftsxcel: `${apiEnd}Shift/get-shift-report-excel-format`,
    useShift: `${apiEnd}Shift/use-shift-template`,
    getShiftByScheduleId: `${apiEnd}Shift/get-by-schedule-id`,
    shiftHistory: `${apiEnd}Shift/shift-history-report`,
    downloadExcel: `${apiEnd}Shift/download-shift-history-excel`,
    downloadPdf: `${apiEnd}Shift/download-shift-history-pdf`,
  },

  getEmployeeCoverage: `${apiEnd}Dashboard/get-employee-coverage`,
  getLeaveCalendarData: `${apiEnd}vacationmanagement/get-leave-calendar-data`,
  getLeaveCalendarCount: `${apiEnd}vacationmanagement/get-leave-calendar-count`,
  getEmployeeUnderReportingManager: `${apiEnd}user/get-all-managers-by-userid`,
  getallClient: `${apiEnd}clients/getall`,
  getAllClients: `${apiEnd}Client/get-all-clients`,
  getAllOrganisations: `${apiEnd}Organisation/get-all-organisations`,
  getDivisionsByOrganisationId: `${apiEnd}Organisation/get-divisions-by-organisationid`,
  getBusinessUnitByDivisionId: `${apiEnd}Organisation/get-business-units-by-divisionid`,
  getDepartmentByBusinessUnitId: `${apiEnd}Organisation/get-departments-by-business-unitid`,
  getTeamsByDepartmentId: `${apiEnd}Organisation/get-teams-by-departmentid`,
  getManagersByDepartmentId: `${apiEnd}Organisation/get-managers-by-departmentid`,
  getUsersByDepartmentId: `${apiEnd}Organisation/get-users-by-departmentid`,
  getManagersByTeamId: `${apiEnd}Organisation/get-managers-by-teamid`,
  getUsersByTeamId: `${apiEnd}Organisation/get-managers-by-teamid`,
  getSameDepartmentManagers: `${apiEnd}User/get-all-same-department-managers-by-managerid`,
  clockIn: `${apiEnd}Location/insert-punchlog`,
  punchLogSource: `${apiEnd}Location/get-all-punchlog-source`,
  getRoles: `${apiEnd}ACLPermission/roles/search`,
  deleteRoles: `${apiEnd}ACLPermission/roles/delete`,
  updateRoles: `${apiEnd}ACLPermission/roles/update`,
  createRoles: `${apiEnd}ACLPermission/roles/insert`,
  getSwapRequest: `${apiEnd}Shift/search-shift-swap-requests`,
  getSwapStatuschanges: `${apiEnd}Shift/change-shift-swap-status`,
  getAllLanguage: `${apiEnd}Language/search`,
  getLanguageResourceString: `${apiEnd}Language/export-resources`,
  getImportResourceString: `${apiEnd}Language/import-resources`,
  addLanguage: `${apiEnd}Language/insert`,
  updateLanguage: `${apiEnd}Language/update`,
  getAllColours: `${apiEnd}Common/get-all-colour`,
  shiftSearchEmp: `${apiEnd}Shift/search-for-dashboard`,
  getTeamMates: `${apiEnd}Shift/get-teammates`,
  getUserShiftByDate: `${apiEnd}Shift/search-user-shifts-by-date`,
  updateShiftSwap: `${apiEnd}Shift/insert-shift-swap`,
  punchLog: {
    getPunchLog: `${apiEnd}Location/search-punchlog`,
    getSourceGuid: `${apiEnd}Location/get-all-punchlog-source`,
    getAllEmployees: `${apiEnd}User/get-by-managerid`,
  },
  getClockInOutStatus: `${apiEnd}Location/get-user-clock-timer`,
  acl: {
    getRoles: `${apiEnd}aclpermission/roles/search`,
    deleteRoles: `${apiEnd}aclpermission/roles/delete`,
    updateRoles: `${apiEnd}aclpermission/roles/update`,
    createRoles: `${apiEnd}aclpermission/roles/insert`,
    aclPermissiongetall: `${apiEnd}aclpermission/permission/get-all`,
    updateRoleMappings: `${apiEnd}aclpermission/permission/update-role-mappings`,
    getrolemappingsbypermissionid: `${apiEnd}aclpermission/permission/get-role-mappings-by-permission-id`,
    searchPermision: `${apiEnd}aclpermission/permission/search`,
  },
  geolocation: {
    search: `${apiEnd}Location/search-geofencing`,
    manage: `${apiEnd}Location/insert-update-geofencing`,
    get: `${apiEnd}Location/get-geofencing-by-id`,
    status: `${apiEnd}Location/change-status`,
    getLocationOnWorkBaises: `${apiEnd}Location/get-geofencing-by-worklocation-id`,
  },
  delegation: {
    search: `${apiEnd}Impersonation/search`,
    insertImpersonate: `${apiEnd}Impersonation/insert-update`,
    delete: `${apiEnd}Impersonation/delete`,
    getImpersonatebyId: `${apiEnd}Impersonation/get-by-id`,
    searchImpersonationHistoryToptoBottom: `${apiEnd}Impersonation/search-impersonation-history-top-to-bottom`,
    searchImpersonationHistorySameLevel: `${apiEnd}Impersonation/search-impersonation-history-same-level`,
    searchImpersonationHistoryLog: `${apiEnd}Impersonation/search-impersonation-history-log`,
    startImpersonation: `${apiEnd}Impersonation/start-impersonation`,
    endImpersonation: `${apiEnd}Impersonation/end-impersonation`,
  },
  exceptionRequest: {
    overTimeEmployee: {
      applyOvertime: `${apiEnd}Shift/insert-overtime`,
      updateOvertime: `${apiEnd}Shift/update-overtime`,
      getById: `${apiEnd}Shift/get-overtime-by-id`,
      getShiftByDate: `${apiEnd}Shift/search-user-shifts-by-date`,
      withDrawRequest: `${apiEnd}Shift/withdraw-overtime`,
      getOverTimeRequest: `${apiEnd}Shift/search-overtime-requests`,
    },
    overTimeManager: {
      acceptRejectOvertime: `${apiEnd}Shift/accept-reject-overtime`,
    },
    changeTime: {
      searchCorrectionRequest: `${apiEnd}TimeSheet/search-correction-request`,
      changeTimeApprove: `${apiEnd}Shift/change-shift-start-end`,
      manageCorrectionRequest: `${apiEnd}TimeSheet/manage-correction-request`,
    },
    exception: {
      exceptionReportRequest: `${apiEnd}Exception/search-exception-report`,
      downloadException: `${apiEnd}Exception/download-exception-report-excel`,
      downloadExceptionReportPdf: `${apiEnd}Exception/download-exception-report-pdf`,
      getAllException: `${apiEnd}Exception/exception`,
      getExceptionByShift: `${apiEnd}TimeSheet/timesheet-exception`,
      search: `${apiEnd}Shift/search-shift-exception`,
      approveReject: `${apiEnd}Shift/approve-reject-shift-exception`,
    },
  },
  timesheet: {
    search: `${apiEnd}TimeSheet/search`,
    delete: `${apiEnd}TimeSheet/delete`,
    download: `${apiEnd}TimeSheet/downloadExcelFormat`,
    monthlyComparison: `${apiEnd}TimeSheet/get-admin-monthly-overtime-report`,
    monthlyComparisonDownloadExcel: `${apiEnd}TimeSheet/download-admin-monthly-overtime-report-excel`,
    monthlyComparisonDownloadPdf: `${apiEnd}TimeSheet/download-admin-monthly-overtime-report-pdf`,
    shiftDetail: `${apiEnd}Shift/get-shift-detail-by-id-and-user-id`,
    shiftCorrection: `${apiEnd}Shift/request-shiftrecurrence-correction`,
    requestCorrection: `${apiEnd}TimeSheet/insert-correction-request`,
    hoursWorkedReport: `${apiEnd}Shift/hours-worked-report`,
  },
  systemUsage: {
    activityType: `${apiEnd}SystemUsage/search-activity-type`,
    getUsers: `${apiEnd}User/get-by-managerid`,
    systemData: `${apiEnd}SystemUsage/search-system-usage-count`,
    usageDetails: `${apiEnd}SystemUsage/search-system-usage-details`,
    shiftCorrection: `${apiEnd}Shift/request-shiftrecurrence-correction`,
    requestCorrection: `${apiEnd}TimeSheet/insert-correction-request`,
    hoursWorkedReport: `${apiEnd}Shift/hours-worked-report`,
    shiftDetail: `${apiEnd}Shift/get-shift-detail-by-id-and-user-id`,
  },
  gdpr: {
    getConsent: `${apiEnd}Gdpr/get-consent`,
    addConsent: `${apiEnd}Gdpr/add-consent`,
    consentDataById: `${apiEnd}Gdpr/get-user-consent`,
    saveConsent: `${apiEnd}Gdpr/save-consent`,
    adminSetting: `${apiEnd}Gdpr/get-admin-setting`,
    saveAdminSetting: `${apiEnd}Gdpr/save-admin-setting`,
    shiftCorrection: `${apiEnd}Shift/request-shiftrecurrence-correction`,
    requestCorrection: `${apiEnd}TimeSheet/insert-correction-request`,
    hoursWorkedReport: `${apiEnd}Shift/hours-worked-report`,
    shiftDetail: `${apiEnd}Shift/get-shift-detail-by-id-and-user-id`,
    getConsentList: `${apiEnd}Gdpr/get-user-consent`,
    submitConsent: `${apiEnd}Gdpr/manage-user-consent`,
    deleteUser: `${apiEnd}Gdpr/anonymize-users`,
  },
  overTime: {
    insert: `${apiEnd}Shift/insert-overtime`,
    searchOvertimeReport: `${apiEnd}TimeSheet/search-overtime-report`,
    downloadOvertimeReportExcel: `${apiEnd}TimeSheet/download-overtime-report-excel`,
    employeeOverTime: `${apiEnd}TimeSheet/get-employee-overtime-report`,
    downloadEmployeeOverTime: `${apiEnd}TimeSheet/download-employee-overtime-report-excel`,
  },


  settings: {
    getSetting: `${apiEnd}Setting/get`,
    saveSetting: `${apiEnd}Setting/save`,
  },
  leaveBalanceReport: {
    getLeaveReport: `${apiEnd}VacationManagement/search-leave-balance-report`,
    downloadLeaveReport: `${apiEnd}VacationManagement/download-leave-balance-report-excel`,
  },
  getShiftException: `${apiEnd}Shift/search-my-shift-exceptions-for-dashboard`,
  vacationManagement: {
    downloadLeaveBalanceReportPdf: `${apiEnd}VacationManagement/download-leave-balance-report-pdf`,
    downloadLeaveBalanceReportExcel: `${apiEnd}VacationManagement/download-leave-balance-report-excel`,
    searchLeaveBalanceReport: `${apiEnd}VacationManagement/search-leave-balance-report`,
    getLeaveCategory: `${apiEnd}vacationmanagement/get-parent-leavetypes`,
    getLeaveType: `${apiEnd}vacationmanagement/get-child-leavetypes-by-parentid`,
    applyLeave: `${apiEnd}vacationmanagement/add-applied-leave`,
    checkForLeaveBalance: `${apiEnd}vacationmanagement/is-user-applicable-for-leave-as-per-balance`,
    getAppliedLeavesByUserId: `${apiEnd}vacationmanagement/get-applied-leaves-by-userid`,
    getLeaveBalance: `${apiEnd}vacationmanagement/get-leave-types-balance-listing-by-userid`,
    getuserappliedleaves: `${apiEnd}vacationmanagement/get-user-applied-leaves`,
    getParentLeaveType: `${apiEnd}VacationManagement/get-parent-leavetypes`,
    getTransactionType: `${apiEnd}VacationManagement/get-transactiontypes`,
    getSortingType: `${apiEnd}VacationManagement/get-sortingtypes`,
    downloadPDF: `${apiEnd}VacationManagement/get-user-applied-leaves-report-pdf-format`,
    downloadExcel: `${apiEnd}VacationManagement/get-user-applied-leaves-report-excel-format`,
    getLocation: `${apiEnd}VacationManagement/get-locations`,
    downloadCalendarPDF: `${apiEnd}VacationManagement/get-leave-calendar-data-pdf-format`,
    downloadCalendarExcel: `${apiEnd}VacationManagement/get-leave-calendar-data-excel-format`,
    getEmployees: `${apiEnd}VacationManagement/get-employees`,
    getLeaveCalendarData: `${apiEnd}vacationmanagement/get-leave-calendar-data`,
    getLeaveCalendarCount: `${apiEnd}vacationmanagement/get-leave-calendar-count`,
    getCloseOpenLeave: `${apiEnd}VacationManagement/close-open-leave`,
    getuserappliedleavesbyleavetypeid: `${apiEnd}vacationmanagement/get-user-applied-leaves-by-leavetypeid`,
    getappliedleavesbyid: `${apiEnd}vacationmanagement/get-applied-leaves-by-id`,
    getFilterTypes: `${apiEnd}VacationManagement/get-filtertypes`,
    getAllyears: `${apiEnd}VacationManagement/get-years`,
    getDownloadFile: `${apiEnd}VacationManagement/downLoad-file`,
    leaveWithdraw: `${apiEnd}VacationManagement/applied-leave-withdrawn`,
    leaveRejectedApproved: `${apiEnd}VacationManagement/applied-leave-approved-rejected`,
    getTeamMateList: `${apiEnd}VacationManagement/get-manager-team-list`,
  },
  userRoles: {
    getAll: `${apiEnd}aclpermission/roles/get-roles`,
    update: `${apiEnd}User/update-user-role-mapping`,
  },
  notification: {
    getCount: `${apiEnd}Notification/get-notification-count-by-user-id`,
    getCategory: `${apiEnd}Notification/get-all-notification-Categories`,
    getNotificationWithCategory: `${apiEnd}Notification/search-notification`,
    readByCategory: `${apiEnd}Notification/read-notification-by-user-id-and-category-id`,
    readByIds: `${apiEnd}Notification/read-notification-by-ids`,
  },
  dashboard: {
    getSettingByUserId: `${apiEnd}User/get-all-dashboard-settings-by-userid`,
    updateSettingByUserId: `${apiEnd}User/update-dashboard-settings-by-userid`,
    getUserCount: `${apiEnd}User/count`,
    getCountDetails: `${apiEnd}Dashboard/get-admin-manager-dashboard-count-details`,
    getDashboardDetails: `${apiEnd}Dashboard/get-admin-manager-dashboard-list-details`,
  },

  getRegreshToken: `${apiEnd}token/refresh-token`,
};
